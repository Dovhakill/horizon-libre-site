# Nom du workflow
name: Aurore - Auto Tweet

# Déclencheurs du workflow
on:
  # Se déclenche à chaque push sur la branche 'main' (on le garde en fallback)
  push:
    branches: [ main ]
    paths:
      - 'article/**/*.html'

  # NOUVEAU : Se déclenche quand un événement externe est reçu
  repository_dispatch:
    types: [ new-article-published ] # On écoute spécifiquement cet événement

  # Permet aussi de lancer le workflow manuellement
  workflow_dispatch: {}

# Le reste du fichier jobs: ... reste identique
jobs:
  tweet-latest-article:
    runs-on: ubuntu-latest
    concurrency:
      group: autotweet-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements-autotweet.txt

      - name: Run autotweet script
        env:
          # Les secrets restent les mêmes
          X_API_KEY: ${{ secrets.X_API_KEY }}
          X_API_SECRET: ${{ secrets.X_API_SECRET }}
          X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
          X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
          GEMINI_API_KEY_HORIZON: ${{ secrets.GEMINI_API_KEY_HORIZON }}
          BLOBS_PROXY_URL: ${{ secrets.BLOBS_PROXY_URL }}
          AURORE_BLOBS_TOKEN: ${{ secrets.AURORE_BLOBS_TOKEN }}
          # On passe le payload de l'événement au script
          GITHUB_EVENT_PAYLOAD: ${{ toJSON(github.event) }}
        run: python autotweet.py
